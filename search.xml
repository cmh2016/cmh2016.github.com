<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于bootstrap二次开发的后台框架</title>
    <url>/2016/09/10/admin-bootstarp-cmh2016/</url>
    <content><![CDATA[<h1 id="项目预览"><a href="#项目预览" class="headerlink" title="项目预览"></a>项目预览</h1><blockquote>
<p>已累成狗，没什么可写的，有兴趣的点击看一下</p>
</blockquote>
<ul>
<li><a href="http://cmh.leolei.cn/admin/%E5%8E%82%E5%AE%B6/%E5%B7%A5%E4%BD%9C%E5%8F%B0%E5%8E%82%E5%AE%B6.html" target="_blank" rel="noopener">厂家</a></li>
<li><a href="http://cmh.leolei.cn/admin/%E5%8E%82%E5%AE%B6/%E5%B7%A5%E4%BD%9C%E5%8F%B0%E5%8E%82%E5%AE%B6.html" target="_blank" rel="noopener">网点</a></li>
</ul>
]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
        <tag>javascript</tag>
        <tag>css3</tag>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript+ajax+json+vue实现银行卡号归属地查询</title>
    <url>/2016/03/08/bank/</url>
    <content><![CDATA[<h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><ul>
<li>根据银行卡号返回正确的发卡行名称和银行卡类型<h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1></li>
<li>json数据使用</li>
<li>ajax获取json</li>
<li>使用vue.js的mvvm模式，简单的双向数据绑定<h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><blockquote>
<p>对比用户输入和json数据对比进行判断,注意本地使用注意跨域</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function bankInfo() &#123;</span><br><span class="line">  var inputValue = $(&quot;#account&quot;).val();</span><br><span class="line">  var InputValue = inputValue.replace(/\s/g, &quot;&quot;);</span><br><span class="line">  console.log(InputValue);</span><br><span class="line">  var tipiofo = $(&quot;.tipiofo&quot;);</span><br><span class="line">  if (InputValue == &quot;&quot;) &#123;</span><br><span class="line">    alert(&quot;银行卡号不能为空！&quot;);</span><br><span class="line">    $(&quot;#account&quot;).focus();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    $.getJSON(&quot;data/bankData.json&quot;, function(data) &#123;</span><br><span class="line">      for (var num in data) &#123; //遍历json数组</span><br><span class="line">        if (InputValue.substring(0, 4) == data[num].bin || InputValue.substring(0, 6) == data[num].bin || InputValue.substring(0, 7) == data[num].bin || InputValue.substring(0, 8) == data[num].bin || InputValue.substring(0, 5) == data[num].bin || InputValue.substring(0, 9) == data[num].bin) &#123;</span><br><span class="line">          tipiofo.text(data[num].bankName);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  if (tipiofo.text() == &quot;&quot;) &#123;</span><br><span class="line">    tipiofo.text(&quot;其他银行&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="http://i1.piimg.com/567571/6041b92e40c6298f.gif" alt></p>
<h1 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h1><p><a href="https://github.com/cmh2016/code/tree/master/bank" target="_blank" rel="noopener">github</a></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>json</tag>
        <tag>ajax</tag>
        <tag>vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>纯css实现3级导航菜单</title>
    <url>/2016/03/10/css-nav-three/</url>
    <content><![CDATA[<h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ul>
<li><p>抛弃繁冗的jqurey和第三方插件，加快dom渲染速度</p>
</li>
<li><p>书写简单，掌握html和css即可</p>
</li>
<li><p>使用css3过渡阴影等属性，更加流畅</p>
</li>
<li><p>结构清晰，模块化</p>
<h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1></li>
</ul>
<ol>
<li><p>使用html元素的继承性和hover伪类</p>
</li>
<li><p>使用<code>position</code>定位元素</p>
</li>
<li><p>结构如下<br> `<li><br> <a href>机构设置</a></li></p>
 <!--二级导航-->
<p> <ul class="navTowList"></ul></p>
<pre><code>&lt;li&gt;
    &lt;a href=&quot;&quot;&gt;行政管理&lt;span class=&quot;more&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/a&gt;
    &lt;!--三级导航--&gt;
    &lt;ul class=&quot;navThreeList&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;行政办公室&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;学生工作办公室&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
    &lt;a href=&quot;&quot;&gt;系、部、中心&lt;span class=&quot;more&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/a&gt;
    &lt;!--三级导航--&gt;
    &lt;ul class=&quot;navThreeList&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;自动化系&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;通信工程系&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;计算机系&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;计算机基础教学部&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;计算机实验教学中心&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;通信工程实验室&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;自动化实验室&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
    &lt;a href=&quot;&quot;&gt;培训机构&lt;span class=&quot;more&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/a&gt;
    &lt;!--三级导航--&gt;
    &lt;ul class=&quot;navThreeList&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;计算机等级考试&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;工程硕士入学考试&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;卫生专业技术资格考试&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;计算机软件水平考试&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&quot;&gt;全国中小学教师计算机水平考试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/li&gt;
</code></pre><p> <br></p></li>`<p></p>
<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/2507543-file_1486535878937_6b41.gif" alt></p>
<h1 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h1><p><a href="https://github.com/cmh2016/code/tree/master/reset-web" target="_blank" rel="noopener">github</a></p>

</ol>
]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>nav</tag>
      </tags>
  </entry>
  <entry>
    <title>electron-vue-excel</title>
    <url>/2018/08/21/electron-vue-excel/</url>
    <content><![CDATA[<h3 id="elecrton-是什么？"><a href="#elecrton-是什么？" class="headerlink" title="elecrton 是什么？"></a>elecrton 是什么？</h3><p>[摘自官网]<br><em>Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库。 Electron通过将Chromium和Node.js合并到同一个运行时环境中，并将其打包为Mac，Windows和Linux系统下的应用来实现这一目的。</em></p>
<p><em>简而言之：使用 JavaScript, HTML 和 CSS 构建<strong>跨平台</strong>的桌面应用</em><br><a href="https://electronjs.org/" target="_blank" rel="noopener">electron中文官网地址</a></p>
<h4 id="elecrton-有什么特点，前端选择electron开发桌面应用有什么优势？"><a href="#elecrton-有什么特点，前端选择electron开发桌面应用有什么优势？" class="headerlink" title="elecrton 有什么特点，前端选择electron开发桌面应用有什么优势？"></a>elecrton 有什么特点，前端选择electron开发桌面应用有什么优势？</h4><ul>
<li>web 技术<blockquote>
<p>Electron 基于 Chromium 和 Node.js, 让你可以使用 HTML, CSS 和 JavaScript 构建应用。所以对于前端工程师来说有着近水楼台的先天优势。</p>
</blockquote>
</li>
<li>开源，跨平台<blockquote>
<p>如果您想在linux、mac、window下开发统一UI及功能的桌面应用，使用electron可以方便快捷的build成不同平台的安装包。</p>
</blockquote>
</li>
<li>nodeJs的完美融合<blockquote>
<p>引用npm官网的一句话“Build amazing things”，在项目中可以使用前端的任何框架和npm里面所有的模块，比如：ffi模块调取dll文件使你的应用原生功能更加强大，扩展性更好。</p>
</blockquote>
</li>
</ul>
<h4 id="electron与nw-jsd该怎么选择？"><a href="#electron与nw-jsd该怎么选择？" class="headerlink" title="electron与nw.jsd该怎么选择？"></a>electron与nw.jsd该怎么选择？</h4><p>项目不需要兼容WinXP ? 果断选择electron : nw.js</p>
<hr>
<p>###使用electron-vue 快速搭建项目<br><em>[摘自官网]electron-vue 充分利用 vue-cli 作为脚手架工具，加上拥有 vue-loader 的 webpack、electron-packager 或是 electron-builder，以及一些最常用的插件，如vue-router、vuex 等等。</em></p>
<p>####项目从开发到打包安装文件<br>1.1 项目使用electron-vue快速搭建，开发中使用yarn管理依赖[如果游vpn的话随意]</p>
<p>1.2 项目UI使用vue的UI库，element、iview根据喜好</p>
<p>1.3 使用node-xlsx读取和生成excel文件</p>
<p>2.1 项目目的：对比两个excel文件中某一列相同项，并且支持追加导出功能。</p>
<p>2.2 开发遇到的问题：node-xlsx读取excel为二维数组，使用element table组件需要数组对象的json格式，所以代码里很多for循环，为了优化大文件的效率，建议巧妙使用if判断和for循环优化写法。</p>
<p>2.3 打包遇到的问题：本机开发打包白屏，但是run dev正常。请参考webpack.renderer.config.js第110行 。 第二种：本机打包正常，copy给其他电脑白屏，报各种模块不存在，请使用【npm】打包！！！一切问题迎刃而解。怀疑是yarn安装依赖没有被打包。</p>
<p>3.1 使用NSIS打包electron生成的可执行文件，需要注意的是在 5/8 的时候先移出全部在依次点击第一个添加exe文件，再点击第二个选择打包后exe所在的目录{记得勾选包含子目录}，然后编译，就会生成一个exe安装文件。</p>
<p>####项目截图<br><img src="http://ol1kqeyve.bkt.clouddn.com/%E6%8D%95%E8%8E%B7.PNG" alt><br><img src="http://ol1kqeyve.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180821092855.png" alt><br><img src="http://ol1kqeyve.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180821093600.png" alt><br><img src="http://ol1kqeyve.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180821093641.png" alt><br><img src="http://ol1kqeyve.bkt.clouddn.com/TIM%E6%88%AA%E5%9B%BE20180821093703.png" alt></p>
<p>####项目地址<br><a href="http://ol1kqeyve.bkt.clouddn.com/excel-tools.exe" target="_blank" rel="noopener">安装包下载</a><br><a href="https://github.com/cmh2016/electron-excel-tool" target="_blank" rel="noopener">github</a></p>
]]></content>
      <tags>
        <tag>vue</tag>
        <tag>electron</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>electron &amp;&amp; ffi</title>
    <url>/2019/03/14/electron-ffi/</url>
    <content><![CDATA[<blockquote>
<p>技术栈<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">electron <span class="comment">// 使用 JavaScript, HTML 和 CSS 构建跨平台的桌面应用</span></span><br><span class="line">electron-vue <span class="comment">// 基于 vue (基本上是它听起来的样子) 来构造 electron 应用程序的样板代码。</span></span><br><span class="line">electron-store <span class="comment">// 本地简单数据存储</span></span><br><span class="line">electron-log <span class="comment">// 日志模块</span></span><br><span class="line">electron-updater <span class="comment">// 更新模块</span></span><br><span class="line">electron-builder <span class="comment">// 打包模块</span></span><br><span class="line">electron-rebuild <span class="comment">//下载 headers、编译原生模来重建 Electron 模块 </span></span><br><span class="line">ffi <span class="comment">// 使用node加载和调用动态库</span></span><br><span class="line">iconv <span class="comment">// 转码</span></span><br><span class="line">node-machine-id <span class="comment">// 获取计算机唯一标识</span></span><br><span class="line">vue-router <span class="comment">// 路由</span></span><br><span class="line">axios <span class="comment">// http</span></span><br><span class="line">element-ui <span class="comment">//UI库</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="1-fatal-error-LNK1127"><a href="#1-fatal-error-LNK1127" class="headerlink" title="1.fatal error LNK1127"></a>1.fatal error LNK1127</h4><p>删除用户目录下.node-gyp  重新安装 npm install node-gyp -g</p>
<h4 id="2-项目开发环境？"><a href="#2-项目开发环境？" class="headerlink" title="2.项目开发环境？"></a>2.项目开发环境？</h4><pre><code>node32位最新版 electron32位（npm i会自动下载32位的） dll文件32位 win10操作系统 .NET Framework 
安装node-gyp 的前提条件如下：
A.
1.python(v2.7 ，3.x不支持);
2.visual C++ Build Tools,或者 （vs2015以上（包含15))
3..net framework 4.5.1
B.如果是干净的环境可以用下面命令一键安装
npm install --global --production windows-build-tools
报Python错误的需要 npm iconfig set python python.exe安装位置
</code></pre><h4 id="3-窗口最大化最小化"><a href="#3-窗口最大化最小化" class="headerlink" title="3.窗口最大化最小化"></a>3.窗口最大化最小化</h4><p>isMaximized()有问题 需要自己声明flag<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> isMaxWin = <span class="literal">false</span></span><br><span class="line">ipcMain.on(<span class="string">'min'</span>, e =&gt; mainWindow.minimize())</span><br><span class="line">ipcMain.on(<span class="string">'max'</span>, e =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'isMaxWin:'</span> + isMaxWin)</span><br><span class="line">  <span class="keyword">if</span> (isMaxWin) &#123;</span><br><span class="line">    isMaxWin = <span class="literal">false</span></span><br><span class="line">    mainWindow.unmaximize()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    mainWindow.maximize()</span><br><span class="line">    isMaxWin = <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<h4 id="4-node-ffi调用dll常见序错误"><a href="#4-node-ffi调用dll常见序错误" class="headerlink" title="4.node-ffi调用dll常见序错误"></a>4.node-ffi调用dll常见序错误</h4><pre><code>1.Win32 error 126错误就是：
    通常是传入的DLL路径错误，找不到Dll文件，推荐使用绝对路径。
    如果是在x64的node/electron下引用32位的DLL，也会报这个错，反之亦然。要确保DLL要求的CPU架构和你的运行环境相同。
    DLL还有引用其他DLL文件，但是找不到引用的DLL文件，可能是VC依赖库或者多个DLL之间存在依赖关系。
    Dynamic Linking Error: Win32 error 127：DLL中没有找到对应名称的函数，需要检查头文件定义的函数名是否与DLL调用时写的函数名是否相同。

2.详细错误码 https://www.jianshu.com/p/79bbb96e0065
</code></pre><h4 id="5-宽高分辨率适应"><a href="#5-宽高分辨率适应" class="headerlink" title="5.宽高分辨率适应"></a>5.宽高分辨率适应</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> devInnerHeight = <span class="number">1080.0</span> <span class="comment">// 开发时的InnerHeight</span></span><br><span class="line"><span class="keyword">let</span> devDevicePixelRatio = <span class="number">1.0</span><span class="comment">// 开发时的devicepixelratio</span></span><br><span class="line"><span class="keyword">let</span> devScaleFactor = <span class="number">1.3</span> <span class="comment">// 开发时的ScaleFactor</span></span><br><span class="line"><span class="keyword">let</span> scaleFactor = <span class="built_in">require</span>(<span class="string">'electron'</span>).screen.getPrimaryDisplay().scaleFactor</span><br><span class="line"><span class="keyword">let</span> zoomFactor = (<span class="built_in">window</span>.innerHeight / devInnerHeight) * (<span class="built_in">window</span>.devicePixelRatio / devDevicePixelRatio) * (devScaleFactor / scaleFactor)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'electron'</span>).webFrame.setZoomFactor(zoomFactor)</span><br></pre></td></tr></table></figure>
<h4 id="6-c与javascript类型对应"><a href="#6-c与javascript类型对应" class="headerlink" title="6.c与javascript类型对应"></a>6.c与javascript类型对应</h4><blockquote>
<p><a href="https://www.npmjs.com/package/node-ffi#types" target="_blank" rel="noopener">https://www.npmjs.com/package/node-ffi#types</a></p>
</blockquote>
<h4 id="7-node-ffi-调用-dll，打包时asar为true时报错问题"><a href="#7-node-ffi-调用-dll，打包时asar为true时报错问题" class="headerlink" title="7.node-ffi 调用 dll，打包时asar为true时报错问题"></a>7.node-ffi 调用 dll，打包时asar为true时报错问题</h4><p>因为asar模式下为只读文件，导致ffi报错，issue上也有提问，没有解答（<a href="https://github.com/node-ffi/node-ffi/issues?utf8=%E2%9C%93&amp;q=asar）" target="_blank" rel="noopener">https://github.com/node-ffi/node-ffi/issues?utf8=%E2%9C%93&amp;q=asar）</a><br>各种文档查看后，发现”asarUnpack”，所以才有下曲线救国的方案<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"asarUnpack":[</span><br><span class="line">  "./dist/electron", // dll文件等</span><br><span class="line">  <span class="string">"node_modules/ffi"</span> <span class="comment">// ffi不压缩</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV !== <span class="string">'development'</span>) &#123;</span><br><span class="line">  __static = __static.replace(<span class="string">'app.asar'</span>, <span class="string">'app.asar.unpacked'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="8-应用自动下载更新和手动检查更新"><a href="#8-应用自动下载更新和手动检查更新" class="headerlink" title="8.应用自动下载更新和手动检查更新"></a>8.应用自动下载更新和手动检查更新</h4><blockquote>
<p>使用electron-updater结合electron-builder实现；细节注意渲染进程和主进程通信时手动检查时多次触发。可以根据下载进度判断。<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;autoUpdater&#125; <span class="keyword">from</span> <span class="string">'electron-updater'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主进程监听渲染进程传来手动检查更新的信息</span></span><br><span class="line">ipcMain.on(<span class="string">'update'</span>, (e, arg) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'update'</span>)</span><br><span class="line">  autoUpdater.checkForUpdates()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> checkForUpdates = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 配置安装包远端服务器</span></span><br><span class="line">  autoUpdater.setFeedURL(<span class="string">'http://*********:8888/lastApp'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 下面是自动更新的整个生命周期所发生的事件</span></span><br><span class="line">  autoUpdater.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    sendUpdateMessage(<span class="string">'error'</span>, message)</span><br><span class="line">  &#125;)</span><br><span class="line">  autoUpdater.on(<span class="string">'checking-for-update'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    sendUpdateMessage(<span class="string">'checking-for-update'</span>, message)</span><br><span class="line">  &#125;)</span><br><span class="line">  autoUpdater.on(<span class="string">'update-available'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    sendUpdateMessage(<span class="string">'update-available'</span>, message)</span><br><span class="line">  &#125;)</span><br><span class="line">  autoUpdater.on(<span class="string">'update-not-available'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    sendUpdateMessage(<span class="string">'update-not-available'</span>, message)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新下载进度事件</span></span><br><span class="line">  autoUpdater.on(<span class="string">'download-progress'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">progressObj</span>) </span>&#123;</span><br><span class="line">    mainWindow.webContents.send(<span class="string">'downloadProgress'</span>, progressObj)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 更新下载完成事件</span></span><br><span class="line">  autoUpdater.on(<span class="string">'update-downloaded'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event, releaseNotes, releaseName, releaseDate, updateUrl, quitAndUpdate</span>) </span>&#123;</span><br><span class="line">    sendUpdateMessage(<span class="string">'isUpdateNow'</span>)</span><br><span class="line">    ipcMain.on(<span class="string">'updateNow'</span>, (e, arg) =&gt; &#123;</span><br><span class="line">      autoUpdater.quitAndInstall()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 执行自动更新检查</span></span><br><span class="line">  autoUpdater.checkForUpdates()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主进程主动发送消息给渲染进程函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendUpdateMessage</span> (<span class="params">message, data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(&#123; message, data &#125;)</span><br><span class="line">  mainWindow.webContents.send(<span class="string">'message'</span>, &#123; message, data &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//app启动时自动更新</span></span><br><span class="line"></span><br><span class="line">mainWindow.on(<span class="string">'ready-to-show'</span>, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'mainWindow opened'</span>)</span><br><span class="line">    mainWindow.show()</span><br><span class="line">    mainWindow.focus()</span><br><span class="line">    <span class="comment">// 启动时自动更新</span></span><br><span class="line">    checkForUpdates()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>渲染进程监听更新事件UI层做出反馈<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; ipcRenderer &#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"></span><br><span class="line">mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>: <span class="string">'main'</span>&#125;)</span><br><span class="line">    <span class="comment">// 更新进度</span></span><br><span class="line">    ipcRenderer.on(<span class="string">'message'</span>, (event, &#123;message, data&#125;) =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(message + <span class="string">' &lt;br&gt;data:'</span> + <span class="built_in">JSON</span>.stringify(data) + <span class="string">'&lt;hr&gt;'</span>)</span><br><span class="line">      <span class="keyword">switch</span> (message) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'update-available'</span>:</span><br><span class="line">          <span class="keyword">this</span>.newVer = data.version</span><br><span class="line">          <span class="keyword">this</span>.$notify(&#123;</span><br><span class="line">            title: <span class="string">'发现新版本'</span>,</span><br><span class="line">            dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">            duration: <span class="number">0</span>,</span><br><span class="line">            message: <span class="string">'当前软件版本号：'</span> + <span class="keyword">this</span>.info.version + <span class="string">'&lt;br&gt;新版本版本号：'</span> + data.version + <span class="string">'&lt;br&gt;正在下载最新版本，请稍等！'</span>,</span><br><span class="line">            type: <span class="string">'success'</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">this</span>.show = <span class="literal">true</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'update-not-available'</span>:</span><br><span class="line">          <span class="keyword">this</span>.show = <span class="literal">false</span></span><br><span class="line">          <span class="keyword">this</span>.$notify(&#123;</span><br><span class="line">            title: <span class="string">'暂无新版本'</span>,</span><br><span class="line">            dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">            duration: <span class="number">0</span>,</span><br><span class="line">            message: <span class="string">'当前软件版本号：'</span> + <span class="keyword">this</span>.info.version + <span class="string">'&lt;br&gt;当前版本为最新版本，暂无新版本可更新！'</span>,</span><br><span class="line">            type: <span class="string">'success'</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'error'</span>:</span><br><span class="line">          <span class="keyword">this</span>.show = <span class="literal">false</span></span><br><span class="line">          <span class="keyword">this</span>.$notify(&#123;</span><br><span class="line">            title: <span class="string">'检查更新错误'</span>,</span><br><span class="line">            dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">            duration: <span class="number">0</span>,</span><br><span class="line">            message: <span class="string">'请联系xxx，或者手动到http://xxx.com下载'</span> ,</span><br><span class="line">            type: <span class="string">'error'</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'isUpdateNow'</span>:</span><br><span class="line">          <span class="keyword">this</span>.show = <span class="literal">false</span></span><br><span class="line">          <span class="keyword">this</span>.$confirm(<span class="string">'新版本下载完成, 是否继续安装?'</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">            confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">            cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">            closeOnClickModal: <span class="literal">false</span>,</span><br><span class="line">            closeOnPressEscape: <span class="literal">false</span>,</span><br><span class="line">            type: <span class="string">'success'</span></span><br><span class="line">          &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">              type: <span class="string">'success'</span>,</span><br><span class="line">              message: <span class="string">'正在安装，请稍后!'</span></span><br><span class="line">            &#125;)</span><br><span class="line">            ipcRenderer.send(<span class="string">'updateNow'</span>)</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">              type: <span class="string">'info'</span>,</span><br><span class="line">              message: <span class="string">'已取消安装,将在您下次使用时自动安装新版本！'</span></span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    ipcRenderer.on(<span class="string">'downloadProgress'</span>, (event, progressObj) =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(progressObj)</span><br><span class="line">      <span class="keyword">this</span>.percent = progressObj.percent.toFixed(<span class="number">2</span>) || <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   methods: &#123;</span><br><span class="line">    <span class="comment">//手动更新方法</span></span><br><span class="line">    updater () &#123;</span><br><span class="line">      <span class="keyword">const</span> loading = <span class="keyword">this</span>.$loading(&#123;</span><br><span class="line">        lock: <span class="literal">true</span>,</span><br><span class="line">        text: <span class="string">'获取最新版本信息中...'</span>,</span><br><span class="line">        spinner: <span class="string">'el-icon-loading'</span>,</span><br><span class="line">        background: <span class="string">'rgba(0, 0, 0, 0.7)'</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">// 正在自动更新时，不发送更新指令，避免多次下载导致下载进度多条记录</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.percent === <span class="number">0</span>) &#123;</span><br><span class="line">        ipcRenderer.send(<span class="string">'update'</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$notify(&#123;</span><br><span class="line">          title: <span class="string">'发现新版本'</span>,</span><br><span class="line">          dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">          duration: <span class="number">0</span>,</span><br><span class="line">          message: <span class="string">'当前软件版本号：'</span> + <span class="keyword">this</span>.info.version + <span class="string">'&lt;br&gt;正在下载最新版本，请稍等！'</span>,</span><br><span class="line">          type: <span class="string">'success'</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">this</span>.show = <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        loading.close()</span><br><span class="line">      &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">   ..................</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="9-程序秒开优化小技巧"><a href="#9-程序秒开优化小技巧" class="headerlink" title="9.程序秒开优化小技巧"></a>9.程序秒开优化小技巧</h4><p>因为electron是基于 Chromium 和 Node.js，所以页面加载的白屏问题特别是使用vue开发的单页应用。这里可以在实例化BrowserWindow时，把<code>show: false</code>然后在<code>ready-to-show</code>里面调用show方法和focus方法。</p>
<h4 id="10-axios封装"><a href="#10-axios封装" class="headerlink" title="10.axios封装"></a>10.axios封装</h4><blockquote>
<p>主要实现以下功能</p>
</blockquote>
<pre><code>.post 和 get 封装 

.报错统一处理

.post提交序列化json数据 后台支持json可忽略

.可配置的loading 是否显示和显示的文字

.多个请求时合并一个loading

.统一headers提交

.开发和产品环境下api地址的切换
</code></pre><blockquote>
<p>代码如下</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">'qs'</span></span><br><span class="line"><span class="keyword">import</span> &#123;getToken&#125; <span class="keyword">from</span> <span class="string">'./cookie'</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  showFullScreenLoading,</span><br><span class="line">  tryHideFullScreenLoading</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'./axiosLoading'</span></span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">'electron-log'</span>)</span><br><span class="line"><span class="keyword">const</span> Store = <span class="built_in">require</span>(<span class="string">'electron-store'</span>)</span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Store()</span><br><span class="line">log.transports.console.format = <span class="string">'&#123;h&#125;:&#123;i&#125;:&#123;s&#125; &#123;text&#125;'</span></span><br><span class="line">log.transports.console.level = <span class="string">'silly'</span></span><br><span class="line">log.transports.file.maxSize = <span class="number">5</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line"><span class="comment">// import store from '../store'</span></span><br><span class="line">axios.defaults.headers.post[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded;charset=UTF-8'</span></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service = axios.create(&#123;</span><br><span class="line">  <span class="comment">// baseURL: process.env.BASE_API,  api的base_url</span></span><br><span class="line">  timeout: <span class="number">15000</span> <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// request拦截器</span></span><br><span class="line">service.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (store.get(<span class="string">'userToken'</span>)) &#123;</span><br><span class="line">    config.headers[<span class="string">'x-appMachineId'</span>] = store.get(<span class="string">'appMachineId'</span>)<span class="comment">// 电脑的唯一识别码 除非重装系统 使用node-machine-id</span></span><br><span class="line">    config.headers[<span class="string">'x-userId'</span>] = store.get(<span class="string">'userToken'</span>).userId<span class="comment">// 让每个请求携带用户id</span></span><br><span class="line">    config.headers[<span class="string">'x-appArea'</span>] = store.get(<span class="string">'appArea'</span>)<span class="comment">// 软件所在区域</span></span><br><span class="line">    config.headers[<span class="string">'x-appDepartment'</span>] = store.get(<span class="string">'appDepartment'</span>)<span class="comment">// 软件所在部门</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 是否显示loading动画</span></span><br><span class="line">  <span class="keyword">if</span> (config.showLoading) &#123;</span><br><span class="line">    <span class="comment">// loading动画时下方的文字</span></span><br><span class="line">    showFullScreenLoading(config.loadingText)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// POST 请求序列化json数据提交</span></span><br><span class="line">  <span class="keyword">if</span> (config.method === <span class="string">'post'</span>) &#123;</span><br><span class="line">    config.data = qs.stringify(config.data)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// log文件记录</span></span><br><span class="line">  log.info(getToken().nickName + <span class="string">' 请求了 API request-&gt;'</span> + <span class="built_in">JSON</span>.stringify(config))</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, error =&gt; &#123;</span><br><span class="line">  <span class="comment">// Do something with request error</span></span><br><span class="line">  <span class="built_in">console</span>.log(error) <span class="comment">// for debug</span></span><br><span class="line">  log.error(getToken().nickName + <span class="string">' 请求了 API request error-&gt;'</span> + <span class="built_in">JSON</span>.stringify(error))</span><br><span class="line">  <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// respone拦截器</span></span><br><span class="line">service.interceptors.response.use(</span><br><span class="line">  response =&gt; &#123;</span><br><span class="line">    log.info(<span class="string">'API response ok-&gt;'</span> + <span class="built_in">JSON</span>.stringify(response))</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * code为非000是抛错 可结合自己业务进行修改</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    <span class="keyword">if</span> (response.config.showLoading) &#123;</span><br><span class="line">      tryHideFullScreenLoading()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> ret = response.data</span><br><span class="line">    <span class="keyword">if</span> (ret.code !== <span class="string">'000'</span>) &#123;</span><br><span class="line">      <span class="comment">// 非000错误下是否需要根据返回值做其他业务判断</span></span><br><span class="line">      <span class="keyword">if</span> (response.config.useError) &#123;</span><br><span class="line">        <span class="keyword">return</span> response.data</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Message(&#123;</span><br><span class="line">          message: ret.msg,</span><br><span class="line">          type: <span class="string">'error'</span>,</span><br><span class="line">          duration: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> response.data</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  error =&gt; &#123;</span><br><span class="line">    tryHideFullScreenLoading()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'err'</span> + error)<span class="comment">// for debug</span></span><br><span class="line">    log.error(<span class="string">'API response error-&gt;'</span> + <span class="built_in">JSON</span>.stringify(error))</span><br><span class="line">    <span class="keyword">let</span> err = error</span><br><span class="line">    <span class="keyword">if</span> (err &amp;&amp; err.response) &#123;</span><br><span class="line">      <span class="keyword">switch</span> (err.response.status) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">          err.message = <span class="string">'错误请求'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">          err.message = <span class="string">'未授权，请重新登录'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">          err.message = <span class="string">'拒绝访问'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">          err.message = <span class="string">'请求错误,未找到该资源'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">405</span>:</span><br><span class="line">          err.message = <span class="string">'请求方法未允许'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">408</span>:</span><br><span class="line">          err.message = <span class="string">'请求超时'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">500</span>:</span><br><span class="line">          err.message = <span class="string">'服务器端出错'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">501</span>:</span><br><span class="line">          err.message = <span class="string">'网络未实现'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">502</span>:</span><br><span class="line">          err.message = <span class="string">'网络错误'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">503</span>:</span><br><span class="line">          err.message = <span class="string">'服务不可用'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">504</span>:</span><br><span class="line">          err.message = <span class="string">'网络超时'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">505</span>:</span><br><span class="line">          err.message = <span class="string">'http版本不支持该请求'</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">          err.message = <span class="string">`连接错误<span class="subst">$&#123;err.response.status&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      err.message = <span class="string">'连接到服务器失败'</span></span><br><span class="line">    &#125;</span><br><span class="line">    Message(&#123;</span><br><span class="line">      message: error.message,</span><br><span class="line">      type: <span class="string">'error'</span>,</span><br><span class="line">      duration: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br><span class="line"></span><br><span class="line"><span class="comment">// axiosLoading.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; Loading &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">'lodash'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> needLoadingRequestCount = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> loading</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startLoading</span> (<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'startLoading ============='</span>)</span><br><span class="line">  loading = Loading.service(&#123;</span><br><span class="line">    lock: <span class="literal">true</span>,</span><br><span class="line">    text: text || <span class="string">'loading...'</span>,</span><br><span class="line">    background: <span class="string">'rgba(0, 0, 0, 0.7)'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">endLoading</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'endLoading=========='</span>)</span><br><span class="line">  loading.close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> tryCloseLoading = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (needLoadingRequestCount === <span class="number">0</span>) &#123;</span><br><span class="line">    endLoading()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">showFullScreenLoading</span> (<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (needLoadingRequestCount === <span class="number">0</span>) &#123;</span><br><span class="line">    startLoading(text)</span><br><span class="line">  &#125;</span><br><span class="line">  needLoadingRequestCount++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">tryHideFullScreenLoading</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (needLoadingRequestCount &lt;= <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">  needLoadingRequestCount--</span><br><span class="line">  <span class="keyword">if</span> (needLoadingRequestCount === <span class="number">0</span>) &#123;</span><br><span class="line">    _.debounce(tryCloseLoading, <span class="number">300</span>)()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//环境切换 </span></span><br><span class="line"><span class="comment">// webpack.renderer.config.js plugins添加</span></span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'../config/index.js'</span>)</span><br><span class="line"><span class="keyword">new</span> webpack.DefinePlugin(&#123;</span><br><span class="line">      <span class="string">'process.env'</span>: process.env.NODE_ENV === <span class="string">'production'</span> ? config.build.env : config.dev.env</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建 config 文件下 和 dev.env.js index.js prod.env.js</span></span><br><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  build: &#123;</span><br><span class="line">    env: <span class="built_in">require</span>(<span class="string">'./prod.env'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  dev: &#123;</span><br><span class="line">    env: <span class="built_in">require</span>(<span class="string">'./dev.env'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dev.env.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  NODE_ENV: <span class="string">'"development"'</span>,</span><br><span class="line">  BASE_API: <span class="string">'"https://www.easy-mock.com/xxxx/test"'</span>, <span class="comment">// 系统接口</span></span><br><span class="line">  BASE_API_JKPT: <span class="string">'"http://xxxx:8080/ims/API"'</span> <span class="comment">// 接口平台</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//prod.env.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  NODE_ENV: <span class="string">'"production"'</span>,</span><br><span class="line">  BASE_API: <span class="string">'"https://www.easy-mock.com/mock/xx/test"'</span>, <span class="comment">// 系统接口</span></span><br><span class="line">  BASE_API_JKPT: <span class="string">'"https://easy-mock.com/mock/xx/vue-admin"'</span> <span class="comment">// 接口平台</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/tools/request'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getBaseData</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(process.env)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: process.env.BASE_API + <span class="string">'/baseData'</span>,<span class="comment">// 根据环境变量自动切换</span></span><br><span class="line">    method: <span class="string">'get'</span>,</span><br><span class="line">    showLoading: <span class="literal">true</span>,</span><br><span class="line">    loadingText: <span class="string">'同步基础数据中'</span>,</span><br><span class="line">    useError: <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="11-调用dll中文乱码问题"><a href="#11-调用dll中文乱码问题" class="headerlink" title="11.调用dll中文乱码问题"></a>11.调用dll中文乱码问题</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> Iconv = <span class="built_in">require</span>(<span class="string">'iconv'</span>).Iconv</span><br><span class="line"><span class="comment">// 读取卡信息</span></span><br><span class="line">ds.iReadCardBas = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> info = Buffer.alloc(<span class="number">500</span>)</span><br><span class="line">  <span class="keyword">let</span> ret = dsDDL.xxx(<span class="number">1</span>, info) <span class="comment">// dll xxx方法名</span></span><br><span class="line">  <span class="keyword">let</span> iconv = <span class="keyword">new</span> Iconv(<span class="string">'GBK'</span>, <span class="string">'UTF-8'</span>) <span class="comment">// 转码</span></span><br><span class="line">  <span class="keyword">let</span> retstring = iconv.convert(info).toString()</span><br><span class="line">  <span class="keyword">if</span> (ret === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> retstring</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    dialog.showErrorBox(<span class="string">'错误提示'</span>, retstring)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="12-封装拍照模块"><a href="#12-封装拍照模块" class="headerlink" title="12.封装拍照模块"></a>12.封装拍照模块</h4><blockquote>
<p>使用mediaDevices 因为运行环境为谷歌浏览器所以不考虑兼容问题 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices" target="_blank" rel="noopener">参考</a>。已封装为cam组件，父组件调用this.$refs.camera.snapshot()方法拍照<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cam"</span>&gt; </span><br><span class="line">     &lt;el-alert</span><br><span class="line">    title=<span class="string">"拍摄要求：1.正脸拍照 2.白色背景 3.请勿佩戴帽子或眼镜 4.请参照绿色边框辅助线拍摄"</span></span><br><span class="line">    type=<span class="string">"info"</span></span><br><span class="line">    show-icon&gt;</span><br><span class="line">  &lt;<span class="regexp">/el-alert&gt;</span></span><br><span class="line"><span class="regexp">      &lt;img :src="imageUrl" alt=""&gt;</span></span><br><span class="line"><span class="regexp">      &lt;video ref="video" class="_vc-video vc-video" :style="videoStyle" :width="width" :height="height" webkit-playsinline&gt;&lt;/</span>video&gt;</span><br><span class="line">      &lt;canvas ref=<span class="string">"canvas"</span> :width=<span class="string">"width"</span> :height=<span class="string">"height"</span> v-show=<span class="string">"false"</span>&gt;&lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'Cam',</span></span><br><span class="line"><span class="regexp">  data () &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      imageUrl: 'static/</span>outline.png<span class="string">'</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  props: &#123;</span></span><br><span class="line"><span class="string">    autoplay: &#123;</span></span><br><span class="line"><span class="string">      type: Boolean,</span></span><br><span class="line"><span class="string">      default: true</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    width: &#123;</span></span><br><span class="line"><span class="string">      type: Number,</span></span><br><span class="line"><span class="string">      default: 640</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    height: &#123;</span></span><br><span class="line"><span class="string">      type: Number,</span></span><br><span class="line"><span class="string">      default: 480</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    fit: &#123;</span></span><br><span class="line"><span class="string">      type: String,</span></span><br><span class="line"><span class="string">      default: '</span>cover<span class="string">',</span></span><br><span class="line"><span class="string">      validator: function (value) &#123;</span></span><br><span class="line"><span class="string">        return ['</span>cover<span class="string">', '</span>contain<span class="string">'].indexOf(value) !== -1</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  computed: &#123;</span></span><br><span class="line"><span class="string">    video () &#123;</span></span><br><span class="line"><span class="string">      return this.$refs.video</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    videoStyle () &#123;</span></span><br><span class="line"><span class="string">      return &#123;</span></span><br><span class="line"><span class="string">        '</span>object-fit<span class="string">': this.fit</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    calculateVideoPreviewSize () &#123;</span></span><br><span class="line"><span class="string">      let video = this.$refs.video</span></span><br><span class="line"><span class="string">      var videoPreviewSize = &#123;</span></span><br><span class="line"><span class="string">        width: video.videoWidth,</span></span><br><span class="line"><span class="string">        height: video.videoHeight</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      let previewRatio = this.width / this.height</span></span><br><span class="line"><span class="string">      let videoRatio = video.videoWidth / video.videoHeight</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      // Set video preview size with width as a reference</span></span><br><span class="line"><span class="string">      let widthFirst = () =&gt; &#123;</span></span><br><span class="line"><span class="string">        videoPreviewSize.width = this.width</span></span><br><span class="line"><span class="string">        videoPreviewSize.height = video.videoHeight * this.width / video.videoWidth</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      // Set video preview size with height as a reference</span></span><br><span class="line"><span class="string">      let heightFirst = () =&gt; &#123;</span></span><br><span class="line"><span class="string">        videoPreviewSize.height = this.height</span></span><br><span class="line"><span class="string">        videoPreviewSize.width = video.videoWidth * this.height / video.videoHeight</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      if (this.fit === '</span>contain<span class="string">') &#123;</span></span><br><span class="line"><span class="string">        if ((previewRatio &lt; 1 &amp;&amp; videoRatio &lt; 1) || (previewRatio &lt;= 1 &amp;&amp; videoRatio &gt;= 1)) &#123;</span></span><br><span class="line"><span class="string">          widthFirst()</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">          heightFirst()</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125; else if (this.fit === '</span>cover<span class="string">') &#123;</span></span><br><span class="line"><span class="string">        if ((previewRatio &lt; 1 &amp;&amp; videoRatio &lt; 1) || (previewRatio &lt;= 1 &amp;&amp; videoRatio &gt;= 1)) &#123;</span></span><br><span class="line"><span class="string">          heightFirst()</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">          widthFirst()</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      return videoPreviewSize</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    snapshot () &#123;</span></span><br><span class="line"><span class="string">      var video = this.$refs.video</span></span><br><span class="line"><span class="string">      var canvas = this.$refs.canvas</span></span><br><span class="line"><span class="string">      var context = canvas.getContext('</span><span class="number">2</span>d<span class="string">')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      var videoPreviewSize = this.calculateVideoPreviewSize()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      // Draw the image</span></span><br><span class="line"><span class="string">      let topOffset = (this.height - videoPreviewSize.height) / 2</span></span><br><span class="line"><span class="string">      let leftOffset = (this.width - videoPreviewSize.width) / 2</span></span><br><span class="line"><span class="string">      context.drawImage(video, leftOffset, topOffset, this.width - leftOffset * 2, this.height - topOffset * 2)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      // Return a base 64 snapshot</span></span><br><span class="line"><span class="string">      return canvas.toDataURL('</span>image/jpeg<span class="string">', 0.8)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  mounted () &#123;</span></span><br><span class="line"><span class="string">    var video = this.$refs.video</span></span><br><span class="line"><span class="string">    let _this = this</span></span><br><span class="line"><span class="string">    function updateDeviceList () &#123;</span></span><br><span class="line"><span class="string">      navigator.mediaDevices.enumerateDevices()</span></span><br><span class="line"><span class="string">        .then(function (devices) &#123;</span></span><br><span class="line"><span class="string">          let haveok = false</span></span><br><span class="line"><span class="string">          devices.forEach(function (device) &#123;</span></span><br><span class="line"><span class="string">            if (device.kind === '</span>videoinput<span class="string">') &#123;</span></span><br><span class="line"><span class="string">              haveok = true</span></span><br><span class="line"><span class="string">              _this.$notify(&#123;</span></span><br><span class="line"><span class="string">                title: '</span>摄像头连接成功<span class="string">',</span></span><br><span class="line"><span class="string">                message: device.label,</span></span><br><span class="line"><span class="string">                type: '</span>success<span class="string">'</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">              navigator.mediaDevices.getUserMedia(&#123;</span></span><br><span class="line"><span class="string">                video: true</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string">                .then(stream =&gt; &#123;</span></span><br><span class="line"><span class="string">                  video.srcObject = stream</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                  if (_this.autoplay) &#123;</span></span><br><span class="line"><span class="string">                    video.play()</span></span><br><span class="line"><span class="string">                  &#125;</span></span><br><span class="line"><span class="string">                &#125;)</span></span><br><span class="line"><span class="string">                .catch(error =&gt; &#123;</span></span><br><span class="line"><span class="string">                  _this.$notify.error(&#123;</span></span><br><span class="line"><span class="string">                    title: '</span>拍照模块错误<span class="string">',</span></span><br><span class="line"><span class="string">                    message: error</span></span><br><span class="line"><span class="string">                  &#125;)</span></span><br><span class="line"><span class="string">                &#125;)</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">          if (haveok === false) &#123;</span></span><br><span class="line"><span class="string">            _this.$notify(&#123;</span></span><br><span class="line"><span class="string">              title: '</span>错误<span class="string">',</span></span><br><span class="line"><span class="string">              message: '</span>无连接摄像头，请查看摄像头连接是否正常可用<span class="string">',</span></span><br><span class="line"><span class="string">              type: '</span>error<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    // Get permission to use the camera</span></span><br><span class="line"><span class="string">    if (navigator.mediaDevices &amp;&amp; navigator.mediaDevices.getUserMedia) &#123;</span></span><br><span class="line"><span class="string">      // 插入或移除设备时监听做出提示</span></span><br><span class="line"><span class="string">      navigator.mediaDevices.ondevicechange = function (event) &#123;</span></span><br><span class="line"><span class="string">        updateDeviceList()</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      navigator.mediaDevices.getUserMedia(&#123;</span></span><br><span class="line"><span class="string">        video: true</span></span><br><span class="line"><span class="string">      &#125;)</span></span><br><span class="line"><span class="string">        .then(stream =&gt; &#123;</span></span><br><span class="line"><span class="string">          video.srcObject = stream</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          if (_this.autoplay) &#123;</span></span><br><span class="line"><span class="string">            video.play()</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">        .catch(error =&gt; &#123;</span></span><br><span class="line"><span class="string">          _this.$notify.error(&#123;</span></span><br><span class="line"><span class="string">            title: '</span>拍照模块错误<span class="string">',</span></span><br><span class="line"><span class="string">            message: error</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="string">.cam&#123;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    width: 100%;</span></span><br><span class="line"><span class="string">    height: 500px;</span></span><br><span class="line"><span class="string">    video,img&#123;</span></span><br><span class="line"><span class="string">        position: absolute;</span></span><br><span class="line"><span class="string">        left: 100px;</span></span><br><span class="line"><span class="string">        top: 43px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    img&#123;</span></span><br><span class="line"><span class="string">        z-index: 5;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="13-封装图像实时处理"><a href="#13-封装图像实时处理" class="headerlink" title="13.封装图像实时处理"></a>13.封装图像实时处理</h4><blockquote>
<p>封装的glfx.js，Caman JS也是个不错的选择。需要注意的是，项目如果开启eslint，js库会报错，开始在js文件头部添加/<em> eslint-disable </em>/忽略库文件的校验。封装的常用方法，亮度、对比度、色相、饱和度、自然饱和度、降噪点、锐化、噪点等</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"front-process-container"</span> v-loading=<span class="string">"loading"</span>&gt;</span><br><span class="line">        &lt;el-row :gutter=<span class="string">"20"</span>&gt;</span><br><span class="line">            &lt;el-col :span=<span class="string">"12"</span>&gt;&lt;div class="grid-content"&gt;</span><br><span class="line">                &lt;p&gt;拍摄照片&lt;/p&gt;</span><br><span class="line">                &lt;img id="original" style="width:100%" crossorigin="anonymous" :src="imgUrl" ref="originalImg"&gt;</span><br><span class="line">                &lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">            &lt;el-col :span=<span class="string">"12"</span>&gt;&lt;div class="grid-content"&gt;</span><br><span class="line">                 &lt;p&gt;优化后照片&lt;/p&gt;</span><br><span class="line">                &lt;img style="width:100%" crossorigin="anonymous" :src="newSrc"&gt;</span><br><span class="line">                &lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-row&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-row :gutter="20"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-col :span="12"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="slider-wrap"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;label class="slider-label"&gt;亮度&lt;/</span>label&gt;</span><br><span class="line">                &lt;el-slider v-model=<span class="string">"valueOfBrightness"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"zj-slider"</span> :max=<span class="string">"100"</span> :min=<span class="string">"-100"</span> @change=<span class="string">"drawByParams"</span>&gt;&lt;<span class="regexp">/el-slider&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-col&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-col :span="12"&gt;</span></span><br><span class="line"><span class="regexp">             &lt;div class="slider-wrap"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;label class="slider-label"&gt;对比度&lt;/</span>label&gt;</span><br><span class="line">                &lt;el-slider v-model=<span class="string">"valueOfContrast"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"zj-slider"</span> :max=<span class="string">"100"</span> :min=<span class="string">"-100"</span> @change=<span class="string">"drawByParams"</span>&gt;&lt;<span class="regexp">/el-slider&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-col&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-row&gt; </span><br><span class="line">        &lt;el-row :gutter=<span class="string">"20"</span>&gt;</span><br><span class="line">            &lt;el-col :span=<span class="string">"12"</span>&gt;</span><br><span class="line">             &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-wrap"</span>&gt;</span><br><span class="line">                &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-label"</span>&gt;色调&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-slider v-model="valueOfHue" class="zj-slider" :max="100" :min="-100" @change="drawByParams"&gt;&lt;/</span>el-slider&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>el-col&gt;</span><br><span class="line">          &lt;el-col :span=<span class="string">"12"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-wrap"</span>&gt;</span><br><span class="line">                &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-label"</span>&gt;饱和度&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-slider v-model="valueOfSaturation" class="zj-slider" :max="100" :min="-100" @change="drawByParams"&gt;&lt;/</span>el-slider&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>el-col&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-row&gt;</span></span><br><span class="line"><span class="regexp">       &lt;el-row :gutter="20"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-col :span="12"&gt;</span></span><br><span class="line"><span class="regexp">             &lt;div class="slider-wrap"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;label class="slider-label"&gt;加噪&lt;/</span>label&gt;</span><br><span class="line">                &lt;el-slider v-model=<span class="string">"valueOfNoise"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"zj-slider"</span> :max=<span class="string">"100"</span> :min=<span class="string">"0"</span> @change=<span class="string">"drawByParams"</span>&gt;&lt;<span class="regexp">/el-slider&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-col&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-col :span="12"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="slider-wrap"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;label class="slider-label"&gt;深褐&lt;/</span>label&gt;</span><br><span class="line">                &lt;el-slider v-model=<span class="string">"valueOfSepia"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"zj-slider"</span> :max=<span class="string">"100"</span> :min=<span class="string">"0"</span> @change=<span class="string">"drawByParams"</span>&gt;&lt;<span class="regexp">/el-slider&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-col&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-row&gt;</span><br><span class="line">        &lt;el-row :gutter=<span class="string">"20"</span>&gt;</span><br><span class="line">            &lt;el-col :span=<span class="string">"12"</span>&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-wrap"</span>&gt;</span><br><span class="line">                &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-label"</span>&gt;锐化半径&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-slider v-model="usmRadius" class="zj-slider" :max="200" :min="0" @change="drawByParams"&gt;&lt;/</span>el-slider&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>el-col&gt;</span><br><span class="line">          &lt;el-col :span=<span class="string">"12"</span>&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-wrap"</span>&gt;</span><br><span class="line">                &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-label"</span>&gt;锐化强度&lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-slider v-model="usmStrength" class="zj-slider" :max="5" :min="0" :step="0.01" @change="drawByParams"&gt;&lt;/</span>el-slider&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>el-col&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-row&gt;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">        &lt;el-button class="op-btn" @click="drawByParams('denoise')" :class="&#123;active: isDenoise&#125;"&gt;降噪&lt;/</span>el-button&gt;</span><br><span class="line">        &lt;el-button <span class="class"><span class="keyword">class</span></span>=<span class="string">"op-btn"</span> @click=<span class="string">"resetImg"</span>&gt;恢复原图&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import * as _ from 'underscore'</span></span><br><span class="line"><span class="regexp">import &#123;fx&#125; from '@/</span>components/camera/glfx.js<span class="string">'</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data () &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      valueOfBrightness: 0,</span></span><br><span class="line"><span class="string">      _canvas: null,</span></span><br><span class="line"><span class="string">      _texture: null,</span></span><br><span class="line"><span class="string">      imgElement: null,</span></span><br><span class="line"><span class="string">      _draw: null,</span></span><br><span class="line"><span class="string">      newSrc: '</span><span class="string">',</span></span><br><span class="line"><span class="string">      OKIMG: '</span><span class="string">',</span></span><br><span class="line"><span class="string">      originalSrc: '</span><span class="string">',</span></span><br><span class="line"><span class="string">      valueOfContrast: 0,</span></span><br><span class="line"><span class="string">      isCurves: false,</span></span><br><span class="line"><span class="string">      isDenoise: false,</span></span><br><span class="line"><span class="string">      valueOfHue: 0,</span></span><br><span class="line"><span class="string">      valueOfSaturation: 0,</span></span><br><span class="line"><span class="string">      valueOfNoise: 0,</span></span><br><span class="line"><span class="string">      valueOfSepia: 0,</span></span><br><span class="line"><span class="string">      usmRadius: 0,</span></span><br><span class="line"><span class="string">      usmStrength: 0,</span></span><br><span class="line"><span class="string">      loading: true,</span></span><br><span class="line"><span class="string">      opBtn: []</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  props: &#123;</span></span><br><span class="line"><span class="string">    imgUrl: &#123;</span></span><br><span class="line"><span class="string">      required: true</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string">    drawByParams (operation) &#123;</span></span><br><span class="line"><span class="string">      this.loading = true</span></span><br><span class="line"><span class="string">      this.resetProperty()</span></span><br><span class="line"><span class="string">      let opIndex = _.indexOf(this.opBtn, operation)</span></span><br><span class="line"><span class="string">      if (opIndex !== -1) &#123;</span></span><br><span class="line"><span class="string">        this.opBtn.splice(opIndex, 1)</span></span><br><span class="line"><span class="string">      &#125; else &#123;</span></span><br><span class="line"><span class="string">        this.opBtn.push(operation)</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      this._draw</span></span><br><span class="line"><span class="string">        .brightnessContrast(this.valueOfBrightness / 100, this.valueOfContrast / 100)</span></span><br><span class="line"><span class="string">        .hueSaturation(this.valueOfHue / 100, this.valueOfSaturation / 100)</span></span><br><span class="line"><span class="string">        .noise(this.valueOfNoise / 100)</span></span><br><span class="line"><span class="string">        .sepia(this.valueOfSepia / 100)</span></span><br><span class="line"><span class="string">        .unsharpMask(this.usmRadius, this.usmStrength)</span></span><br><span class="line"><span class="string">      if (_.indexOf(this.opBtn, '</span>curves<span class="string">') !== -1) &#123;</span></span><br><span class="line"><span class="string">        this.isCurves = true</span></span><br><span class="line"><span class="string">        this._draw.curves([[0, 1], [1, 0]], [[0, 1], [1, 0]], [[0, 1], [1, 0]])</span></span><br><span class="line"><span class="string">      &#125; else &#123;</span></span><br><span class="line"><span class="string">        this.isCurves = false</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if (_.indexOf(this.opBtn, '</span>denoise<span class="string">') !== -1) &#123;</span></span><br><span class="line"><span class="string">        this.isDenoise = true</span></span><br><span class="line"><span class="string">        this._draw.denoise(20)</span></span><br><span class="line"><span class="string">      &#125; else &#123;</span></span><br><span class="line"><span class="string">        this.isDenoise = false</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      this._draw.update()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      console.log(this._draw)</span></span><br><span class="line"><span class="string">      console.log(this._canvas)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      this.newSrc = this._canvas.toDataURL('</span>image/jpeg<span class="string">', 0.8)</span></span><br><span class="line"><span class="string">      this.setImg()</span></span><br><span class="line"><span class="string">      this.loading = false</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    // 对照片进行358X441像素处理</span></span><br><span class="line"><span class="string">    setImg () &#123;</span></span><br><span class="line"><span class="string">      let imageisok = new Image()</span></span><br><span class="line"><span class="string">      imageisok.src = this.newSrc</span></span><br><span class="line"><span class="string">      imageisok.onload = () =&gt; &#123;</span></span><br><span class="line"><span class="string">        let c = document.createElement('</span>canvas<span class="string">')</span></span><br><span class="line"><span class="string">        c.width = 358</span></span><br><span class="line"><span class="string">        c.height = 441</span></span><br><span class="line"><span class="string">        var context = c.getContext('</span><span class="number">2</span>d<span class="string">')</span></span><br><span class="line"><span class="string">        context.drawImage(imageisok, 0, 0, 358, 441)</span></span><br><span class="line"><span class="string">        this.OKIMG = c.toDataURL('</span>image/jpeg<span class="string">')</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    returnPhoto () &#123;</span></span><br><span class="line"><span class="string">      return this.OKIMG</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    getWebGLElements () &#123;</span></span><br><span class="line"><span class="string">      console.log('</span>getWebGLElements<span class="string">')</span></span><br><span class="line"><span class="string">      if (!this._canvas) &#123;</span></span><br><span class="line"><span class="string">        this._canvas = fx.canvas()</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      console.log(this._canvas)</span></span><br><span class="line"><span class="string">      if (!this.imgElement) &#123;</span></span><br><span class="line"><span class="string">        this.imgElement = this.$refs.originalImg</span></span><br><span class="line"><span class="string">        this.originalSrc = this.imgElement.src</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      if (!this._texture) &#123;</span></span><br><span class="line"><span class="string">        this._texture = this._canvas.texture(this.imgElement)</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      if (!this._draw) &#123;</span></span><br><span class="line"><span class="string">        this._draw = this._canvas.draw(this._texture)</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      this.loading = false</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    resetProperty () &#123;</span></span><br><span class="line"><span class="string">      console.log('</span>resetProperty:<span class="string">', this.imgElement)</span></span><br><span class="line"><span class="string">      console.log(this._texture)</span></span><br><span class="line"><span class="string">      this._texture.loadContentsOf(this.imgElement)</span></span><br><span class="line"><span class="string">      this._draw = this._canvas.draw(this._texture)</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    resetImg () &#123;</span></span><br><span class="line"><span class="string">      this.valueOfBrightness = 0</span></span><br><span class="line"><span class="string">      this.valueOfContrast = 0</span></span><br><span class="line"><span class="string">      this.valueOfHue = 0</span></span><br><span class="line"><span class="string">      this.valueOfSaturation = 0</span></span><br><span class="line"><span class="string">      this.valueOfNoise = 0</span></span><br><span class="line"><span class="string">      this.valueOfSepia = 0</span></span><br><span class="line"><span class="string">      this.usmRadius = 0</span></span><br><span class="line"><span class="string">      this.usmStrength = 0</span></span><br><span class="line"><span class="string">      this.isCurves = false</span></span><br><span class="line"><span class="string">      this.isDenoise = false</span></span><br><span class="line"><span class="string">      this.opBtn = []</span></span><br><span class="line"><span class="string">      this.resetProperty()</span></span><br><span class="line"><span class="string">      this._draw.update()</span></span><br><span class="line"><span class="string">      this.newSrc = this._canvas.toDataURL('</span>image/jpeg<span class="string">', 0.8)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  mounted () &#123;</span></span><br><span class="line"><span class="string">    this.loading = false</span></span><br><span class="line"><span class="string">    var img = new Image()</span></span><br><span class="line"><span class="string">    img.setAttribute('</span>crossOrigin<span class="string">', '</span>anonymous<span class="string">')</span></span><br><span class="line"><span class="string">    img.onload = () =&gt; &#123;</span></span><br><span class="line"><span class="string">      this.$nextTick(() =&gt; &#123;</span></span><br><span class="line"><span class="string">        this.getWebGLElements()</span></span><br><span class="line"><span class="string">      &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    img.src = this.imgUrl</span></span><br><span class="line"><span class="string">    this.newSrc = this.imgUrl</span></span><br><span class="line"><span class="string">    this.setImg()</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  watch: &#123;</span></span><br><span class="line"><span class="string">    imgUrl: function (val) &#123;</span></span><br><span class="line"><span class="string">      if (val) &#123;</span></span><br><span class="line"><span class="string">        var img = new Image()</span></span><br><span class="line"><span class="string">        img.setAttribute('</span>crossOrigin<span class="string">', '</span>anonymous<span class="string">')</span></span><br><span class="line"><span class="string">        img.onload = () =&gt; &#123;</span></span><br><span class="line"><span class="string">          this.$nextTick(() =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.getWebGLElements()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        img.src = val</span></span><br><span class="line"><span class="string">        this.newSrc = val</span></span><br><span class="line"><span class="string">        this.setImg()</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>vue</tag>
        <tag>electron</tag>
        <tag>node</tag>
        <tag>ffi</tag>
      </tags>
  </entry>
  <entry>
    <title>flex-rem-fis3-zepto-fastclick实现简单的 webapp</title>
    <url>/2016/04/15/flex-rem-fis3-zepto-fastclick/</url>
    <content><![CDATA[<h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul>
<li>flex 布局</li>
<li>rem 弹性单位</li>
<li>fis3 脚手架工具</li>
<li>zepto 移动端轻量级jqurey库</li>
<li>fastclick 解决点透问题(部分国产手机无效)</li>
<li>base64图片资源</li>
<li>less css预处理语法<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><blockquote>
<p>扫一扫</p>
</blockquote>
</li>
</ul>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-10/19095962-file_1486714999250_16bb5.png" alt></p>
<hr>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/86125530-file_1486540780565_17588.gif" alt></p>
<hr>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/23592841-file_1486541170108_4ff1.gif" alt></p>
<hr>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/76299422-file_1486541451209_17fb0.gif" alt></p>
<hr>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/22329865-file_1486541577800_5f72.gif" alt></p>
<hr>
<h1 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h1><p><a href="https://github.com/cmh2016/flex-rem-fis3-zepto-fastclick" target="_blank" rel="noopener">github</a></p>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>rem</tag>
        <tag>flex</tag>
        <tag>fis3</tag>
        <tag>zepto</tag>
        <tag>点透</tag>
        <tag>webapp</tag>
        <tag>less</tag>
      </tags>
  </entry>
  <entry>
    <title>flex--弹性布局--布局的革命</title>
    <url>/2016/03/23/flex/</url>
    <content><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><ul>
<li><p>CSS3为我们提供了一种可伸缩的灵活的web页面布局方式-flexbox布局，它具有很强大的功能，可以很轻松实现很多复杂布局。然而Flex属性较多，不便于记忆，而在项目中，布局使用频繁，那么可以将flex抽离为一个布局工具类，简化使用方式，快速应用于项目，减少记忆成本。</p>
</li>
<li><p>采用Flex布局的元素为，称为 Flex容器 ，容器的直接子元素称为 Flex项目 ，容器默认有两个轴心线，用于项目的对齐与排列，水平主轴为 main axis ，垂直主轴为 cross axis ，主轴的开始位置为 start ， 结束位置为 end 。</p>
</li>
</ul>
<p><img src="http://img2.tuicool.com/nuI77n2.png!web" alt></p>
<h1 id="CSS属性说明"><a href="#CSS属性说明" class="headerlink" title="CSS属性说明"></a>CSS属性说明</h1><ul>
<li>将任意元素的 display 属性设置为 flex ，可将其转换为Flex容器<blockquote>
<p>注意：设为Flex容器后，子元素的 float 、 clear 和 vertical-align 属性将失效</p>
</blockquote>
</li>
</ul>
<h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><blockquote>
<p>感谢lzxb的封装，使用flex.css，简洁的api，熟悉的属性值，入门毫无压力。在html中采用属性的方式布，将布局和css进行分离，清晰的布局结构让你更容易维护，可以在不更改css的情况下更改布局。特别是在React中使用data-flex属性布局，维护起来更加的方便。</p>
</blockquote>
<h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;footer flex=&quot;dir:left box:mean&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;index.html&quot; flex=&quot;dir:top box:mean&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon icon_index icon_index_active&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;name active&quot;&gt;首页&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;classify.html&quot; flex=&quot;dir:top box:mean&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon icon_classify&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;name&quot;&gt;分类&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;my.html&quot; flex=&quot;dir:top box:mean&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon icon_my&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;name&quot;&gt;我的&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/28559808-file_1486543581319_717c.gif" alt></p>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>flex</tag>
      </tags>
  </entry>
  <entry>
    <title>fis3-目前配置最简单的前端工程构建工具</title>
    <url>/2016/10/16/fis3/</url>
    <content><![CDATA[<h1 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h1><blockquote>
<p>借用官网图片，一看就懂  <a href="http://fis.baidu.com/" target="_blank" rel="noopener">官网传送门</a></p>
</blockquote>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-10/65912440-file_1486711899137_d94.png" alt></p>
<ul>
<li><p>本人是今年年初开始在项目中使用fis3来进行前端自动化，模块化，性能优化等工作。从刚开始的fis2使用到fis3的变革，百度其实还是蛮用心的。无论是设计理念和使用体验上都翻了翻，不但具备了Webpack等工具的所有功能，还有许多理念都属前沿，是我最喜欢的前端工程化工具 。</p>
</li>
<li><p>说起前端工程化工具就不得不提目前最火的 webpack 、Grunt 、Gulp等。他们的共同点就是让前端攻城狮从重复的工作中解脱出来，更加高效和高质量的完成工作。</p>
</li>
<li><p>FIS3 , 为你定制的前端工程构建工具。解决前端开发中自动化工具、性能优化、模块化框架、开发规范、代码部署、开发流程等问题</p>
</li>
<li><p>webpack貌似是目前使用最为火热的打包工具，各大知名的框架类库都用其打包，国内使用最近也火热起来。它在单页应用和类库打包上帮助许多人从代码管理中解脱了出来，成为了当下风靡一时的打包工具。特别是在webapp单页应用快速发展的今天，vue.js凭借着易用、灵活、高性能的特点脱颖而出。官方提供的vue全家桶(vue+vueRouter+webpack)着实让webpack火了一把。</p>
<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="  配置文件"></a>  配置文件</h1><blockquote>
<p><code>fis-conf.js</code></p>
</blockquote>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">* @Author: cmh</span><br><span class="line">* @Date:   2016-01-13 09:56:40</span><br><span class="line">* @Last Modified by:  cmh</span><br><span class="line">* @Last Modified time: 2016-07-07 13:57:22</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//打包</span><br><span class="line">fis.match(&apos;::package&apos;, &#123;</span><br><span class="line">postpackager:fis.plugin(&apos;loader&apos;, &#123;</span><br><span class="line">allInOne: true</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//开启MD5戳 项目完成时统一加md5</span><br><span class="line">fis.match(&apos;*.&#123;less,js,css,png,jpg&#125;&apos;, &#123;</span><br><span class="line">useHash: true</span><br><span class="line">&#125;);</span><br><span class="line">// widget 目录下为组件</span><br><span class="line">fis.match(&apos;/widget/**&apos;, &#123;</span><br><span class="line">  isMod: true</span><br><span class="line">&#125;);</span><br><span class="line">// widget下的 js 调用 jswrapper 进行自动化组件化封装</span><br><span class="line">fis.match(&apos;/widget/*.js&apos;, &#123;</span><br><span class="line">    postprocessor: fis.plugin(&apos;jswrapper&apos;, &#123;</span><br><span class="line">        type: &apos;commonjs&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line">//编译</span><br><span class="line">fis.match(&apos;*.less&apos;, &#123;</span><br><span class="line">parser: fis.plugin(&apos;less&apos;),</span><br><span class="line">rExt: &apos;.css&apos;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//压缩</span><br><span class="line">fis.match(&apos;*.js&apos;, &#123;</span><br><span class="line">optimizer: fis.plugin(&apos;uglify-js&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(&apos;*.less&apos;, &#123;</span><br><span class="line">optimizer: fis.plugin(&apos;clean-css&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(&apos;*.css&apos;, &#123;</span><br><span class="line">optimizer: fis.plugin(&apos;clean-css&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(&apos;*.png&apos;, &#123;</span><br><span class="line">optimizer: fis.plugin(&apos;png-compressor&apos;)</span><br><span class="line">&#125;);</span><br><span class="line">// 启用相对路径插件</span><br><span class="line">fis.hook(&apos;relative&apos;);</span><br><span class="line">// 让所有文件，都使用相对路径。</span><br><span class="line">fis.match(&apos;**&apos;, &#123;</span><br><span class="line">relative: true</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fis.match(&apos;*.&#123;less,css,js,png,jpg,ttf&#125;&apos;, &#123;</span><br><span class="line">  release: &apos;/static/$0&apos; // 所有静态资源发布时产出到static下</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(&apos;widget/**.html&apos;, &#123;</span><br><span class="line">  release: &apos;/template/$0&apos; // 所有模板资源发布时产出到static/template下</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="我的目录结构"><a href="#我的目录结构" class="headerlink" title="  我的目录结构"></a>  我的目录结构</h1>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    --------- css/项目用到的css文件</span><br><span class="line">|</span><br><span class="line">--------fonts/项目中使用的字体文件</span><br><span class="line">|            </span><br><span class="line">|            -----icon/项目用到的所有图标文件</span><br><span class="line">|            |</span><br><span class="line">------images------banner/项目banner图</span><br><span class="line">|            |</span><br><span class="line">|            -----test/项目静态资源的示例图片</span><br><span class="line">|</span><br><span class="line">|            ------lib/项目用到的js库文件</span><br><span class="line">-----static---------js----|</span><br><span class="line">|            ------my/项目用到的js文件</span><br><span class="line">|</span><br><span class="line">--------pkg/项目页面中引用的打包好的单页面css/js文件</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">--------template/widget/项目中模块化的html/js文件</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">---------map.json/项目资源地图</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">---------*.html/项目最终生成的静态页面</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">----------目录结构说明.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h1><blockquote>
<p>html模块化，可以方便的在需要的位置引入公用的html结构（类似于php的include(“xxx.php”)</p>
</blockquote>
<p>举个例子，比如客户说我要改一个头部菜单的二级菜单，以往我们会修改一个，然后复制粘贴…..。现在只需要修改头部模块，剩下的交给fis3来帮你完成。</p>
<blockquote>
<p>比如list页面</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;list&lt;/title&gt;</span><br><span class="line">    &lt;!-- SEO优化 --&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;</span><br><span class="line">    &lt;!-- 默认使用360极速模式加载 --&gt;</span><br><span class="line">    &lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</span><br><span class="line">    &lt;!-- 样式引入 --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/common/base.min.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/list/list.less&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/header/heater.less&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/header/banner.less&quot;&gt;</span><br><span class="line">     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/foot/footer.less&quot;&gt;</span><br><span class="line">     &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/page//page.less&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;link rel=&quot;import&quot; href=&quot;widget/header/header.html?__inline&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;import&quot; href=&quot;widget/header/banner.html?__inline&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;listMain&quot;&gt;</span><br><span class="line">         &lt;link rel=&quot;import&quot; href=&quot;widget/list/listLiftImg.html?__inline&quot;&gt;</span><br><span class="line">         &lt;link rel=&quot;import&quot; href=&quot;widget/list/listRight.html?__inline&quot;&gt;</span><br><span class="line">         &lt;div class=&quot;c&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;link rel=&quot;import&quot; href=&quot;widget/page/page.html?__inline&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">     &lt;link rel=&quot;import&quot; href=&quot;widget/foot/footer.html?__inline&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://github.com/cmh2016/code/tree/master/fis3" target="_blank" rel="noopener">查看更多源码</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端工具</category>
      </categories>
      <tags>
        <tag>fis3</tag>
        <tag>前端自动化</tag>
        <tag>前端性能优化</tag>
        <tag>前端工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2016/03/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>移动端的奇淫技巧</title>
    <url>/2016/04/08/meta-app/</url>
    <content><![CDATA[<h1 id="viewport和meta"><a href="#viewport和meta" class="headerlink" title="viewport和meta"></a>viewport和meta</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</span><br><span class="line">    &lt;!--针对ios--&gt;</span><br><span class="line">    &lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</span><br><span class="line">    &lt;!--添加主屏后再次打开是否全屏--&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-touch-fullscreen&quot; content=&quot;yes&quot;&gt;</span><br><span class="line">    &lt;!--禁止百度转码--&gt;</span><br><span class="line">    &lt;meta name=&quot;Cache-Control&quot; content=&quot;no-siteapp&quot;&gt;</span><br><span class="line">    &lt;!--ios顶部颜色--&gt;</span><br><span class="line">    &lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</span><br><span class="line">    &lt;!--禁用数字识别电话--&gt;</span><br><span class="line">    &lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</span><br><span class="line">    &lt;!--添加主屏后显示标题文字--&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;卡券商城&quot;&gt;</span><br><span class="line">    &lt;!--添加主屏显示的图标 sizes为尺寸--&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;144x144&quot; href=&quot;&quot;&gt;</span><br><span class="line">    &lt;!--viewport--&gt;</span><br><span class="line">    &lt;meta content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot; name=&quot;viewport&quot;&gt;</span><br></pre></td></tr></table></figure>
<h1 id="CSS伪类-active"><a href="#CSS伪类-active" class="headerlink" title="CSS伪类:active"></a>CSS伪类:active</h1><p>如果你想使用元素的伪类来实现 按下激活 状态，那么你需要知道以下问题：</p>
<ul>
<li><p>iOS上的几乎任何浏览器，定义元素的伪类 :active 都是无效；<br>Android上，Android Browser 和 Chrome 都支持伪类 :active ，其它第三方浏览器有部分不支持；</p>
</li>
<li><p>定义了 :active 并且当前浏览器环境支持，当手指在滚动或者无意间的划过时，:active 状态都会被激活；</p>
</li>
</ul>
<blockquote>
<p>为了规避上述所有的问题，如果需要 按下激活 状态，推荐使用 js 新增一个 className</p>
</blockquote>
<h1 id="清除输入框内阴影"><a href="#清除输入框内阴影" class="headerlink" title="清除输入框内阴影"></a>清除输入框内阴影</h1><p>iOS上的几乎任何浏览器输入框（input, textarea）默认有内部阴影，但无法使用 box-shadow 来清除，如果不需要阴影，可以这样关闭：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    /* 方法1: 去掉边框 */</span><br><span class="line">    border: 0;</span><br><span class="line"></span><br><span class="line">    /* 方法2: 边框色透明 */</span><br><span class="line">    border-color: transparent;</span><br><span class="line"></span><br><span class="line">    /* 方法3: 重置输入框默认外观 */</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    appearance: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="禁止保存或拷贝图像"><a href="#禁止保存或拷贝图像" class="headerlink" title="禁止保存或拷贝图像"></a>禁止保存或拷贝图像</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="取消touch高亮"><a href="#取消touch高亮" class="headerlink" title="取消touch高亮"></a>取消touch高亮</h1><p>在移动设备上，所有设置了伪类 :active 的元素，默认都会在激活状态时，显示高亮框，如果不想要这个高亮，那么你可以通过以</p>
<blockquote>
<p>使用下方法来禁止：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.xxx &#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="禁止选中内容"><a href="#禁止选中内容" class="headerlink" title="禁止选中内容"></a>禁止选中内容</h1><p>如果你不想用户可以选中页面中的内容，那么你可以禁掉：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="快速回弹滚动"><a href="#快速回弹滚动" class="headerlink" title="快速回弹滚动"></a>快速回弹滚动</h1><p>早期的时候，移动端的浏览器都不支持非body元素的滚动条，所以一般都借助 iScroll;<br>Android 3.0/iOS解决了非body元素的滚动问题，但滚动条不可见，同时iOS上只能通过2个手指进行滚动；<br>Android 4.0解决了滚动条不可见及增加了快速回弹滚动效果，不过随后这个特性又被移除；<br>iOS从5.0开始解决了滚动条不可见及增加了快速回弹滚动效果<br>在iOS上如果你想让一个元素拥有像 Native 的滚动效果</p>
<blockquote>
<p>你可以这样做：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.xxx &#123;</span><br><span class="line">    overflow: auto; /* auto | scroll */</span><br><span class="line">    -webkit-overflow-scrolling: touch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="开启拨打电话功能："><a href="#开启拨打电话功能：" class="headerlink" title="开启拨打电话功能："></a>开启拨打电话功能：</h1><p><code>&lt;a href=&quot;tel:13256485323&quot;&gt;拨打&lt;/a&gt;</code></p>
<h1 id="开启发送短信功能："><a href="#开启发送短信功能：" class="headerlink" title="开启发送短信功能："></a>开启发送短信功能：</h1><p><code>&lt;a href=&quot;sms:13256485323&quot;&gt;发送短信&lt;/a&gt;</code></p>
<h1 id="开启邮件发送："><a href="#开启邮件发送：" class="headerlink" title="开启邮件发送："></a>开启邮件发送：</h1><p><code>&lt;a href=&quot;mailto:dooyoe@gmail.com&quot;&gt;dooyoe@gmail.com&lt;/a&gt;</code></p>
<h1 id="禁止文本缩放"><a href="#禁止文本缩放" class="headerlink" title="禁止文本缩放"></a>禁止文本缩放</h1><p>当移动设备横竖屏切换时，文本的大小会重新计算，进行相应的缩放，当我们不需要这种情况时，可以选择禁止：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    -webkit-text-size-adjust: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="webkit表单元素重置"><a href="#webkit表单元素重置" class="headerlink" title="webkit表单元素重置"></a>webkit表单元素重置</h1><p><code>.css{-webkit-appearance:none;}</code></p>
<h1 id="webkit表单输入框placeholder"><a href="#webkit表单输入框placeholder" class="headerlink" title="webkit表单输入框placeholder"></a>webkit表单输入框placeholder</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input::-webkit-input-placeholder&#123;color:#AAAAAA;&#125;</span><br><span class="line">input:focus::-webkit-input-placeholder&#123;color:#EEEEEE;&#125;</span><br></pre></td></tr></table></figure>
<h1 id="开启硬件加速"><a href="#开启硬件加速" class="headerlink" title="开启硬件加速"></a>开启硬件加速</h1><blockquote>
<p>解决页面闪白 保证动画流畅</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.xxx &#123;</span><br><span class="line">   -webkit-transform: translate3d(0, 0, 0);</span><br><span class="line">   -moz-transform: translate3d(0, 0, 0);</span><br><span class="line">   -ms-transform: translate3d(0, 0, 0);</span><br><span class="line">   transform: translate3d(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>webapp</tag>
        <tag>响应式</tag>
      </tags>
  </entry>
  <entry>
    <title>rem 实现手机屏幕适配</title>
    <url>/2016/03/15/rem/</url>
    <content><![CDATA[<h1 id="常用单位"><a href="#常用单位" class="headerlink" title="常用单位"></a>常用单位</h1><blockquote>
<p>先看一下px，em，rem，%之间的关系</p>
</blockquote>
<ul>
<li><p>px：就是像素，相对于屏幕分辨率而言的，简单来说就是平时我们写静态页面时用px作单位</p>
</li>
<li><p>百分比（%）：这比较适合块状的页面设计，比如经常在写移动端的时候也会用到，经常做响应式设计。例如经典的bootstrap的栅格系统就是通过css3的媒体查询定义不同的<code>col-md-*</code>的宽度百分比值。感兴趣的可以看一下bootstrap源码</p>
</li>
<li><p>em：是相对长度单位，相对于父级元素的单位。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。就是当默认字体大小为14px，那么就有1em=14px；</p>
</li>
<li><p>rem：是相对于根元素，这样就意味着，我们只需要在根元素确定一个参考值。</p>
</li>
</ul>
<h1 id="rem优势和使用场景"><a href="#rem优势和使用场景" class="headerlink" title="rem优势和使用场景"></a>rem优势和使用场景</h1><ul>
<li><p>最经典的实现响应式方案，就拿bootstrap来实现移动端的响应式来说，我们一般根据媒体查询做iPhone5s，iPhone6s，iPhone6 plus等几套css样式。</p>
</li>
<li><p>因为rem是根据html的<code>font-size</code>来自动计算。所以，我们只需要使用媒体查询定义常用的屏幕规定html根字体就可以。</p>
<blockquote>
<p>例如</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">    -ms-text-size-adjust: 100%;</span><br><span class="line">    -webkit-text-size-adjust: 100%</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media only screen and (min-width: 400px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size:21.33333333px!important</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media only screen and (min-width: 414px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size:22.08px!important</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media only screen and (min-width: 480px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        font-size:25.6px!important</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>比如，1rem默认为20px；<br>作为尺寸单位，可以作为字体大小，亦可作为盒子模型的属性。</p>
<h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="http://ol1kqeyve.bkt.clouddn.com/17-2-8/4738033-file_1486545623680_17a93.gif" alt></p>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>rem</tag>
        <tag>webapp</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序--那些年踩过的坑</title>
    <url>/2017/02/08/wx-a-app-bug/</url>
    <content><![CDATA[<h1 id="这就尴尬了"><a href="#这就尴尬了" class="headerlink" title="这就尴尬了"></a>这就尴尬了</h1><blockquote>
<p>很多人理直气壮的说，微信小程序不就是html+css+js<br>吗？好吧，我原谅你的无知。如果真的这样认为就要认真看一下，不要踩坑</p>
</blockquote>
<ul>
<li><p>微信小程序里的js不是js。程序屏蔽了一部分原生的 API 接口，以下为被屏蔽：window document frames self location navigator localStorage history Caches screen alert confirm prompt XMLHttpRequest WebSocket。所以不要再问为什么我alert不能用。呵呵</p>
</li>
<li><p>wxss不支持less/sass等css预处理语言</p>
</li>
<li><p>网络请求报非法是，修改header的content-type属性如下（<a href="https://www.zhihu.com/question/51145570" target="_blank" rel="noopener">其他说法</a>)</p>
<blockquote>
<p>注意，前提是无appId。如果有，报错不在合法请参考官网</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">header: &#123;</span><br><span class="line">  &apos;content-type&apos;: &apos;application/x-www-form-urlencoded&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>不支持高级的css原则器。0.0(官方说的是目前)</p>
<blockquote>
<p>仅支持以下xss选择器<br>  .class #id element element,element ::after ::before<br>  所以不要使用&gt; + ~ nth-child ….</p>
</blockquote>
</li>
<li><p>这个不算是坑，因为微信小程序是单向数据绑定，所以在mvvm模式下，记得修改数据时及时setData</p>
</li>
<li><p>还有就是官方给的IDE，经常出现莫名其妙的问题。比如，你修改保存后，页面没有修改亦或卡死等情况</p>
</li>
<li><p>新建页面的时候，一定要按照4个文件的要求，然后切记在app.js的page项中注册，否则报错</p>
</li>
<li><p>导航栏文字颜色只支持黑/白，但是测试中发现本地下可以任意颜色，但是发布后，颜色就会变为默认的白色，这点注意</p>
<blockquote>
<p>有图有真相！<br>  <img src="http://ol1kqeyve.bkt.clouddn.com/17-2-10/19089130-file_1486719609301_55e5.png" alt></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>webapp</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信公众号开发之LocalStorage</title>
    <url>/2018/06/21/wechat/</url>
    <content><![CDATA[<blockquote>
<p>最近开发一个公众号，使用LocalStorage记录是否是第一次打开和用户的登录状态，用微信的OAuth2.0鉴权实现多终端多设备共享登录状态。</p>
</blockquote>
<hr>
<h5 id="思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找"><a href="#思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找" class="headerlink" title="思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找"></a>思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找</h5><h6 id="具体思路为：思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找"><a href="#具体思路为：思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找" class="headerlink" title="具体思路为：思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找"></a>具体思路为：思路是LocalStorage里面储存用户登录标记及相关信息，有的话进行业务，没有的话从数据库查找</h6><ul>
<li>首先使用静默授权<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842" target="_blank" rel="noopener">【不清楚看这里】</a>获取openid，使用功能时先check下LocalStorage里有没有登录状态，没有的话跳转登录绑定openid和用户信息储存数据库，并将用户状态和登录状态储存在localstore里面。</li>
<li>然后，每次进入redirect_uri的时候如果本地缓存有不是第一次登录的话直接显示登录及用户信息，如果没有的话从数据库查询并放入本地缓存。</li>
<li>最后，退出登录的时候clear掉LocalStorage，然后再次进入时走上一步，行程一个闭环。</li>
<li><strong>使用第一次登录的LocalStorage标记主要是为了减少接口的调用，不用每次都从数据库拿信息。减少服务器开销</strong></li>
</ul>
<h5 id="开发过程中偶尔遇到LocalStorage被清除的，难道微信浏览器对LocalStorage有“特殊对待”？于是进行的百度，得到了下面的结果："><a href="#开发过程中偶尔遇到LocalStorage被清除的，难道微信浏览器对LocalStorage有“特殊对待”？于是进行的百度，得到了下面的结果：" class="headerlink" title="开发过程中偶尔遇到LocalStorage被清除的，难道微信浏览器对LocalStorage有“特殊对待”？于是进行的百度，得到了下面的结果："></a>开发过程中偶尔遇到LocalStorage被清除的，难道微信浏览器对LocalStorage有“特殊对待”？于是进行的百度，得到了下面的结果：</h5><blockquote>
<p><em>微信内置浏览器按照微信团队的说法就是标准的 WebView（Android下），跟普通 webAPP 本质上是一样的。当 WebView 因为内存不足、进程被杀、微信主动杀掉等原因被干掉以后，所有跟浏览器相关的信息全部灰飞烟灭，cookie、LocalStorage、SessionStorage、WebSQL 全部消失。</em></p>
</blockquote>
<p><img src="http://ww4.sinaimg.cn/large/9150e4e5ly1fmed0xxbcyg206o06oglr.gif" alt></p>
<p>经过一上午的测试、修改、排查，发现ios下通用里面的清除缓存也无法清理掉LocalStorage！神马情况，网上都是莫名被清除，为啥我的是相反的结果？！然后怎么搞都没清除掉LocalStorage，就连杀微信进程也没清除LocalStorage？最后神奇的发现微信账号退出后，LocalStorage里面没值了！！！</p>
<p><img src="http://ww2.sinaimg.cn/large/6af89bc8gw1f8no4n150gj204g04xjrb.jpg" alt></p>
<p>经过细心的翻阅官方指摘发现这么一句话<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1483682025_enmey" target="_blank" rel="noopener">“退出微信账号后，将会清空所有Cookie和LocalStorage”</a>，不清楚网上说的是否在安卓或其他设备上出现过，<strong>仅测试iPhone6</strong>。</p>
<p>写的比较乱，大家见谅。仅此为以后入坑的开发者作为参考。<br><img src="http://ww2.sinaimg.cn/large/6af89bc8gw1f8o4hpr55vj208e07xq32.jpg" alt></p>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>webapp</tag>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-v2ex</title>
    <url>/2017/03/06/vue-v2ex/</url>
    <content><![CDATA[<h1 id="v2ex"><a href="#v2ex" class="headerlink" title="v2ex"></a>v2ex</h1><blockquote>
<p>A vue.js project for V2EX</p>
</blockquote>
<h2 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h2><blockquote>
<p>首页</p>
</blockquote>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/index.gif" alt="首页"></p>
<blockquote>
<p>主题</p>
</blockquote>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/zhuti.gif" alt="主题"></p>
<blockquote>
<p>关于</p>
</blockquote>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/about.gif" alt="关于"></p>
<h2 id="已实现的功能清单"><a href="#已实现的功能清单" class="headerlink" title="已实现的功能清单"></a>已实现的功能清单</h2><ol>
<li>首页不同主题tab切换</li>
<li>文章列表模块</li>
<li>主题列表和主题搜索</li>
<li>关于V2EX信息和清除本地缓存</li>
<li>数据本地化</li>
<li>上拉加载和下拉刷新</li>
<li>欢迎页和Loading模块</li>
</ol>
<h2 id="在线预览"><a href="#在线预览" class="headerlink" title="在线预览"></a>在线预览</h2><blockquote>
<p>扫一扫</p>
</blockquote>
<p><img src="http://i1.piimg.com/567571/d10efe65cd3d4fec.png" alt><br><a href="http://cmh.leolei.cn/vue" target="_blank" rel="noopener">点击</a></p>
<h2 id="注意！注意！注意！"><a href="#注意！注意！注意！" class="headerlink" title="注意！注意！注意！"></a>注意！注意！注意！</h2><blockquote>
<p>本地运行会有跨域问题。按照如下配置可通过node解决跨域问题。但是这个不行，已亲测豆瓣API可以实现跨域，不知道是不是V2EX提供的api是情况。本地开发解决跨域终极方法（仅仅适用于开发环境）–安装谷歌插件 Allow-Control-Allow-Origin: * 即可</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dev: &#123;</span><br><span class="line">  env: require(&apos;./dev.env&apos;),</span><br><span class="line">  port: 8088,</span><br><span class="line">  autoOpenBrowser: false,</span><br><span class="line">  assetsSubDirectory: &apos;static&apos;,</span><br><span class="line">  assetsPublicPath: &apos;/&apos;,</span><br><span class="line">  proxyTable: &#123;</span><br><span class="line">      &apos;/api&apos;:&#123;</span><br><span class="line">          target:&apos;http://www.v2ex.com/api&apos;,</span><br><span class="line">          changeOrigin:true,</span><br><span class="line">          pathRewrite:&#123;</span><br><span class="line">              &apos;^/api&apos;:&apos;&apos;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<h2 id="Build-Setup"><a href="#Build-Setup" class="headerlink" title="Build Setup"></a>Build Setup</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install dependencies</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># serve with hot reload at localhost:8080</span></span><br><span class="line">npm run dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># build for production with minification</span></span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line"><span class="comment"># build for production and view the bundle analyzer report</span></span><br><span class="line">npm run build --report</span><br></pre></td></tr></table></figure>
<p>For detailed explanation on how things work, checkout the <a href="http://vuejs-templates.github.io/webpack/" target="_blank" rel="noopener">guide</a> and <a href="http://vuejs.github.io/vue-loader" target="_blank" rel="noopener">docs for vue-loader</a>.</p>
]]></content>
      <categories>
        <category>webapp</category>
      </categories>
      <tags>
        <tag>vue.js</tag>
        <tag>webapp</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序--简单音乐播放器</title>
    <url>/2017/02/15/wx-a-app-music/</url>
    <content><![CDATA[<h1 id="api"><a href="#api" class="headerlink" title="api"></a>api</h1><blockquote>
<p>使用的是QQ音乐非官方api，<a href="https://github.com/ccchangkong/article/issues/23" target="_blank" rel="noopener">地址</a></p>
</blockquote>
<blockquote>
<p>福利：国内免费的api接口，<a href="https://github.com/marktony/Awesome_API/blob/master/Chinese.md" target="_blank" rel="noopener">查看</a></p>
</blockquote>
<h1 id="gif演示"><a href="#gif演示" class="headerlink" title="gif演示"></a>gif演示</h1><blockquote>
<p><a href="http://ol1kqeyve.bkt.clouddn.com/%E5%BE%AE%E4%BF%A1web%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%20v0.12.130400%202017_2_15%2016_49_42.mp4" target="_blank" rel="noopener">完整视频演示</a> 视频较大，手机登录勿点！</p>
</blockquote>
<p><img src="http://ol1kqeyve.bkt.clouddn.com/wx-a-app-music.gif" alt></p>
<h1 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h1><ol>
<li>获取源码（看下文）</li>
<li>下载官方的IDE</li>
<li>新建项目，选择无appId，路径选择已下载好的源码路径</li>
</ol>
<h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><ul>
<li>小程序动态添加移除class。按照数据驱动的思想，我们可以通过三元表达式，如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;image class=&quot;music-img &#123;&#123;run?runClass:&apos;&apos;&#125;&#125;&quot; src=&quot;&#123;&#123;img&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在js里面去动态修改run的值。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">that.setData(&#123;</span><br><span class="line">          playing: true,</span><br><span class="line">          run: true</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p>
<ul>
<li>使用小程序自带的音乐播放器，在列表中，只允许播放一个控件的方法。官方我没找到。所以曲线救国，自己写了一个，代码如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//播放按钮</span><br><span class="line"> bindplay: function (e) &#123;</span><br><span class="line">   console.log(&quot;开始播放&quot;);</span><br><span class="line">   // 获取储存里的id 暂停其播放 实现点击下一个是暂停上一个</span><br><span class="line">   var randomMusicId = wx.getStorageSync(&apos;random-music-id&apos;) || [];</span><br><span class="line">   this.audioCtx = wx.createAudioContext(randomMusicId);</span><br><span class="line">   this.audioCtx.pause();</span><br><span class="line"> &#125;,</span><br><span class="line"> //开始播放了 开始播放时把当前id写入储存</span><br><span class="line"> bindtimeupdate: function (e) &#123;</span><br><span class="line">   wx.setStorageSync(&apos;random-music-id&apos;, e.currentTarget.id);</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="https://github.com/cmh2016/code/tree/master/music" target="_blank" rel="noopener">获取源码</a></p>
<h1 id="最后说两句"><a href="#最后说两句" class="headerlink" title="最后说两句"></a>最后说两句</h1><p>刚开始接触微信小程序，有很多不足，有什么不足和好的建议，请在评论区留言^.^</p>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>webapp</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序--豆瓣电影简单开发</title>
    <url>/2017/01/05/wx-a-app/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>话说微信小程序已经公测了，并且最新的开发工具已经自带无APPId，作为前端攻城狮的我怎么能错过这股浪潮呢？<br>因为之前学过vue.js，他们都属于数据驱动视图的<code>MVVM</code>，所以上手起来就简单很多。</p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><blockquote>
<p>学习一门语言API和源码是必不可少的</p>
</blockquote>
<ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/" target="_blank" rel="noopener">官方文档</a></li>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/" target="_blank" rel="noopener">API</a></li>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/devtools.html" target="_blank" rel="noopener">开发者工具</a></li>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/demo/quickstart.zip" target="_blank" rel="noopener">源码</a></li>
<li><a href="https://developers.douban.com/wiki/?title=movie_v2" target="_blank" rel="noopener">豆瓣电影API</a></li>
</ul>
<h1 id="项目目标"><a href="#项目目标" class="headerlink" title="项目目标"></a>项目目标</h1><blockquote>
<p>本来想实现剧照和长评的，可惜个人没有资格，需要豆瓣api权限</p>
</blockquote>
<ul>
<li>底部tab</li>
<li>首页预加载loading</li>
<li>获取用户信息制作loading</li>
<li>推荐电影列表展示</li>
<li>下拉刷新</li>
<li>上拉翻页</li>
<li>电影信息详情</li>
<li>演员相册展示</li>
<li>电影模糊搜索</li>
<li>电影搜索结果展示</li>
<li>根据电影评分显示对应的星星</li>
<li>分享</li>
<li>待续….</li>
</ul>
<h1 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h1><blockquote>
<p>官网给的很详细，多看几遍基本上上手很简单,直接上上码</p>
</blockquote>
<p><code>app.json</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;pages&quot;:[</span><br><span class="line">    &quot;pages/index/index&quot;,</span><br><span class="line">    &quot;pages/detail/detail&quot;,</span><br><span class="line">    &quot;pages/search/search&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;window&quot;:&#123;</span><br><span class="line">    &quot;backgroundTextStyle&quot;:&quot;dark&quot;,</span><br><span class="line">    &quot;navigationBarBackgroundColor&quot;: &quot;#f2f2f2&quot;,</span><br><span class="line">    &quot;navigationBarTitleText&quot;: &quot;豆瓣电影&quot;,</span><br><span class="line">    &quot;navigationBarTextStyle&quot;:&quot;#00b600&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">   &quot;tabBar&quot;: &#123;</span><br><span class="line">     &quot;color&quot;: &quot;#333&quot;,</span><br><span class="line">     &quot;selectedColor&quot;: &quot;#00b600&quot;,</span><br><span class="line">     &quot;backgroundColor&quot;: &quot;#fff&quot;,</span><br><span class="line">     &quot;borderStyle&quot;: &quot;black&quot;,</span><br><span class="line">    &quot;list&quot;: [&#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages/index/index&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;推荐&quot;,</span><br><span class="line">&quot;iconPath&quot;:&quot;img/nav01.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;:&quot;img/nav01-active.png&quot;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages/search/search&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;搜索&quot;,</span><br><span class="line">      &quot;iconPath&quot;: &quot;img/nav03.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;: &quot;img/nav03-active.png&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>index.js</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//index.js</span><br><span class="line">//获取应用实例</span><br><span class="line">var app = getApp()</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    hotMovie: [],//视频列表</span><br><span class="line">    page: 1,//页码</span><br><span class="line">    size: 18,//每页条数</span><br><span class="line">    show:true, //默认显示</span><br><span class="line">    motto: &apos;欢迎使用豆瓣电影&apos;,</span><br><span class="line">    userInfo: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  //详情页跳转,</span><br><span class="line">  goDetail: function (e) &#123;</span><br><span class="line">    var id = e.currentTarget.id;</span><br><span class="line">    //console.log(e)</span><br><span class="line">    wx.setStorageSync(&apos;detail-id&apos;, id);</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      url: &quot;../detail/detail&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  //下拉刷新</span><br><span class="line">  onPullDownRefresh: function () &#123;</span><br><span class="line">    console.log(&quot;下拉刷新&quot;);</span><br><span class="line">    var that = this;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: &apos;正在更新...&apos;,</span><br><span class="line">      icon: &apos;loading&apos;,</span><br><span class="line">      duration: 10000</span><br><span class="line">    &#125;)</span><br><span class="line">    that.setData(&#123;</span><br><span class="line">      page: 1</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: &apos;https://api.douban.com/v2/movie/top250?count=&apos; + that.data.size + &apos;&amp;start=&apos; + (that.data.page - 1) * that.data.size, //获取豆瓣热映列表</span><br><span class="line">      header: &#123;</span><br><span class="line">        &apos;content-type&apos;: &apos;application/x-www-form-urlencoded&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        city: &apos;洛阳&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line"></span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          hotMovie: res.data.subjects</span><br><span class="line">        &#125;)</span><br><span class="line">        wx.hideToast();</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            title: &apos;刷新成功&apos;,</span><br><span class="line">            icon: &apos;success&apos;,</span><br><span class="line">            duration: 1500</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;, 100)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: function (res) &#123;</span><br><span class="line">        console.log(res.data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  onShareAppMessage: function () &#123;</span><br><span class="line">    // 用户点击右上角分享</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &apos;豆瓣电影&apos;, // 分享标题</span><br><span class="line">      desc: &apos;豆瓣电影微信小程序个人练习版&apos;, // 分享描述</span><br><span class="line">      path: &apos;path&apos; // 分享路径</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 上拉加载回调接口</span><br><span class="line">  onReachBottom: function () &#123;</span><br><span class="line">    console.log(&quot;下一页&quot;);</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: &apos;加载中&apos;,</span><br><span class="line">      icon: &apos;loading&apos;,</span><br><span class="line">      duration: 10000</span><br><span class="line">    &#125;)</span><br><span class="line">    this.data.page++;</span><br><span class="line">    console.log(this.data.page)</span><br><span class="line">    var that = this</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: &apos;https://api.douban.com/v2/movie/top250?count=&apos; + that.data.size + &apos;&amp;start=&apos; + (that.data.page - 1) * that.data.size, //获取豆瓣热映列表</span><br><span class="line">      header: &#123;</span><br><span class="line">        &apos;content-type&apos;: &apos;application/x-www-form-urlencoded&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        city: &apos;洛阳&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line">        var newHotMovie = that.data.hotMovie;</span><br><span class="line">        var data = res.data.subjects;</span><br><span class="line">        Array.prototype.push.apply(newHotMovie, data)</span><br><span class="line">        //console.log(&quot;newHotMovie&quot;+newHotMovie);</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          hotMovie: newHotMovie</span><br><span class="line">        &#125;)</span><br><span class="line">        wx.hideToast();</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            title: &apos;加载成功&apos;,</span><br><span class="line">            icon: &apos;success&apos;,</span><br><span class="line">            duration: 1500</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;, 100)</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      fail: function (res) &#123;</span><br><span class="line">        console.log(res.data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  //onload函数</span><br><span class="line">  onLoad: function () &#123;</span><br><span class="line">    console.log(&apos;onLoad&apos;);</span><br><span class="line">      //调用应用实例的方法获取全局数据</span><br><span class="line">    app.getUserInfo(function(userInfo)&#123;</span><br><span class="line">      //更新数据</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        userInfo:userInfo</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    //获取用户位置 根据经纬度反解析位置（暂无百度地图秘钥）</span><br><span class="line">    wx.getLocation(&#123;</span><br><span class="line">      type: &apos;wgs84&apos;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        //console.log(res)</span><br><span class="line">        var latitude = res.latitude</span><br><span class="line">        var longitude = res.longitude</span><br><span class="line">        var speed = res.speed</span><br><span class="line">        var accuracy = res.accuracy</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    var that = this</span><br><span class="line">    console.log(that.data.page);</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: &apos;加载中&apos;,</span><br><span class="line">      icon: &apos;loading&apos;,</span><br><span class="line">      duration: 10000</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: &apos;https://api.douban.com/v2/movie/top250?count=18&amp;start=1&apos;, //获取豆瓣热映列表</span><br><span class="line">      header: &#123;</span><br><span class="line">        &apos;content-type&apos;: &apos;application/x-www-form-urlencoded&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        //city:</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        console.log(res.data.subjects);</span><br><span class="line">        wx.hideToast();</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          hotMovie: res.data.subjects,</span><br><span class="line">          show:false</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        console.log(that.data.hotMovie)</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: function (res) &#123;</span><br><span class="line">        console.log(res.data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p><a href="https://github.com/cmh2016/code/tree/master/douban" target="_blank" rel="noopener">查看更多源码</a></p>
<h1 id="动态图演示"><a href="#动态图演示" class="headerlink" title="动态图演示"></a>动态图演示</h1><blockquote>
<p>注意：网速差误入</p>
</blockquote>
<p><a href="http://ol1kqeyve.bkt.clouddn.com/douban.gif" target="_blank" rel="noopener">点击查看</a></p>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>webapp</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
</search>
